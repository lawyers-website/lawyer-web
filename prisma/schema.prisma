generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Reviews {
    id        String        @id @default(cuid())
    user      LawyerDetails @relation(fields: [lawyerId], references: [lawyerId], onDelete: Cascade)
    lawyerId  String
    userId    String
    userName  String?
    rating    Int
    review    String
    createdAt DateTime      @default(now())
}

model Order {
    id       String @id @default(cuid())
    lawyerId String
}

model LawyerDetails {
    id           String    @id @default(cuid())
    lawyerId     String    @unique
    lawyer       User      @relation(fields: [lawyerId], references: [id], onDelete: Cascade)
    institution  String
    course       String
    fullName     String
    experience   Int
    services     String
    image        String?
    expertise    String
    state        String
    country      String
    description  String
    price        Int       @default(0)
    rating       Int?      @default(0)
    reviews      Reviews[]
    numofreviews Int?      @default(0)
}

model User {
    id            String         @id @default(cuid())
    name          String?
    email         String?        @unique
    password      String?
    emailVerified DateTime?
    image         String?
    role          Role           @default(USER)
    createdAt     DateTime       @default(now())
    accounts      Account[]
    sessions      Session[]
    lawyerDetails LawyerDetails?
}

enum Role {
    USER
    LAWYER
    ADMIN
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
